searchState.loadedDescShard("spl_type_length_value", 0, "Crate defining an interface for managing type-length-value …\nError types\nModule for the length portion of a Type-Length-Value …\nType-length-value structure definition and manipulation\nThe <code>VariableLenPack</code> serialization trait.\nErrors that may be returned by the Token program.\nType already exists in TLV data\nType not found in TLV data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLength in TLV structure\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for all TLV state\nEncapsulates immutable base state data (mint or account) …\nEncapsulates mutable base state data (mint or account) …\nEncapsulates owned TLV data\nAllocate the given number of bytes for the given …\nAllocates and serializes a new TLV entry from a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the base size required for TLV data\nUnpack a portion of the TLV data as bytes for the entry …\nUnpack a portion of the TLV data as mutable bytes for the …\nGet the full buffer containing all TLV data\nIterates through the TLV entries, returning only the types\nUnpack a portion of the TLV data as bytes for the first …\nUnpack a portion of the TLV data as mutable bytes for the …\nUnpack a portion of the TLV data as the desired Pod type …\nUnpack a portion of the TLV data as the desired type that …\nUnpacks a portion of the TLV data as the desired …\nUnpack a portion of the TLV data as the desired Pod type …\nUnpack a portion of the TLV data as the desired type that …\nUnpacks a portion of the TLV data as the desired …\nPacks the default TLV data into the first open slot in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPacks a variable-length value into its appropriate data …\nPacks a variable-length value into its appropriate data …\nPacks a variable-length value into an existing TLV space, …\nPacks a variable-length value into an existing TLV space, …\nReallocate the given number of bytes for the given …\nReallocate the given number of bytes for the given …\nUnpacks TLV state data\nUnpacks TLV state data\nUnpacks TLV state data\nTrait that mimics a lot of the functionality of …\nGets the packed length for a given instance of the type\nSafely write the contents to the type into the given slice\nWrites the serialized form of the instance into the given …\nDeserializes the type from the given slice")