searchState.loadedDescShard("spl_token_metadata_interface", 0, "Crate defining an interface for token-metadata\nNamespace for all programs implementing token-metadata\nInterface error types\nInstruction types\nToken-metadata interface state types\nToken metadata has no update authority\nIncorrect account provided\nIncorrect mint authority has signed the instruction\nIncorrect metadata update authority has signed the …\nKey not found in metadata account\nMint has no mint authority\nErrors that may be returned by the interface.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInstruction data for Emit\nEmits the token-metadata as return data\nInitialization instruction data\nInitializes a TLV entry with the basic token-metadata …\nRemove key instruction data\nRemoves a key-value pair in a token-metadata account.\nAll instructions that must be implemented in the …\nUpdate authority instruction data\nUpdates the token-metadata authority\nUpdate field instruction data\nUpdates a field in a token-metadata account.\nCreates an <code>Emit</code> instruction\nEnd of range of data to emit\nField to update in the metadata\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the idempotent flag is set to true, then the …\nCreates an <code>Initialize</code> instruction\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey to remove in the additional metadata portion\nLonger name of the token\nNew authority for the token metadata, or unset if <code>None</code>\nPacks a TokenInstruction into a byte buffer.\nCreates a <code>RemoveKey</code> instruction\nStart of range of data to emit\nShortened symbol of the token\nUnpacks a byte buffer into a TokenMetadataInstruction.\nCreates an <code>UpdateAuthority</code> instruction\nCreates an <code>UpdateField</code> instruction\nURI pointing to more metadata (image, video, etc.)\nValue to write for the field\nFields in the metadata account, used for updating\nA user field, whose key is given by the associated string\nThe name field, corresponding to <code>TokenMetadata.name</code>\nThe symbol field, corresponding to <code>TokenMetadata.symbol</code>\nData struct for all token-metadata, stored in a TLV entry\nThe uri field, corresponding to <code>TokenMetadata.uri</code>\nAny additional metadata about the token as key-value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the slice corresponding to the given start and end …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe associated mint, used to counter spoofing to be sure …\nThe longer name of the token\nRemoves the key-value pair given by the provided key. …\nSets a key-value pair in the additional metadata\nThe shortened symbol for the token\nGives the total size of this struct as a TLV entry in an …\nUpdates a field in the metadata struct\nThe authority that can sign to update the metadata\nThe URI pointing to richer metadata")