searchState.loadedDescShard("solana_vote_interface", 0, "The vote native program.\nVote program errors\nVote program instructions\nVote state\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReasons the vote might have had an error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAuthorize a key to send votes or issue a withdrawal\nAuthorize a key to send votes or issue a withdrawal\nGiven that the current Voter or Withdrawer authority is a …\nGiven that the current Voter or Withdrawer authority is a …\nUpdate the onchain vote state for the signer.\nUpdate the onchain vote state for the signer along with a …\nInitialize a vote account\nSync the onchain vote state with local tower\nSync the onchain vote state with local tower along with a …\nUpdate the commission for the vote account\nUpdate the vote account’s validator identity …\nUpdate the onchain vote state for the signer.\nUpdate the onchain vote state for the signer along with a …\nA Vote instruction with recent votes\nA Vote instruction with recent votes\nWithdraw some amount of funds\nReturns the argument unchanged.\nReturns the argument unchanged.\nOnly to be used on vote instructions (guard with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly to be used on vote instructions (guard with …\nOnly to be used on vote instructions (guard with …\nThe const program ID.\nReturns <code>true</code> if given pubkey is the program ID.\nReturns the program ID.\nthe signer for withdrawals\nthe unique identifier for the chain up to and including …\npercentage (0-100) that represents what part of a rewards …\nreturns commission split as (voter_portion, …\nReturns if the vote state contains a slot <code>candidate_slot</code>\nNumber of “credits” owed to this account from the …\nReturns the credits to award for a vote at the given …\nDeserializes the input <code>VoteStateVersions</code> buffer directly …\nDeserializes the input <code>VoteStateVersions</code> buffer directly …\nNumber of “credits” owed to this account from the …\nhistory of how many credits earned by the end of each epoch\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nsignature of the bank’s state at the last slot\nsignature of the bank’s state at the last slot\nsignature of the bank’s state at the last slot\nincrement credits, record credits for last epoch if new …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmost recent timestamp submitted with a vote\nThe proposed tower\nThe proposed tower\nCreates a tower with consecutive votes for …\nCreates a tower with consecutive confirmation for <code>slots</code>\nthe node that votes in this account\nThe proposed root\nThe proposed root\nUpper limit on the size of the Vote State when votes.len() …\nA stack of votes starting with the oldest vote\nprocessing timestamp of last slot\nprocessing timestamp of last slot\nprocessing timestamp of last slot\nthe signer for vote transactions\nthe signer for withdrawals\npercentage (0-100) that represents what part of a rewards …\nhistory of how many credits earned by the end of each epoch\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmost recent timestamp submitted with a vote\nthe node that votes in this account\nhistory of prior authorized voters and the epochs for which\nUpper limit on the size of the Vote State when votes.len() …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")