searchState.loadedDescShard("spl_elgamal_registry", 0, "The const program ID.\nSeed for the ElGamal registry program-derived address\nReturns <code>true</code> if given pubkey is the program ID.\nDerives the ElGamal registry account address for the given …\nDerives the ElGamal registry account address and seed for …\nReturns the program ID.\nInitialize an ElGamal public key registry.\nUpdate an ElGamal public key registry with a new ElGamal …\nCreate a <code>RegistryInstruction::CreateRegistry</code> instruction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPacks a <code>RegistryInstruction</code> into a byte buffer.\nUnpacks a byte buffer into a <code>RegistryInstruction</code>\nCreate a <code>RegistryInstruction::UpdateRegistry</code> instruction\nRelative location of the …\nRelative location of the …\nAllocate ElGamal registry account using Program Derived …\nProcesses <code>CreateRegistry</code> instruction\nInstruction processor\nProcesses <code>UpdateRegistry</code> instruction\nElGamal public key registry. It contains an ElGamal public …\nThe ElGamal public key associated with an account\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe owner of the registry")