searchState.loadedDescShard("solana_system_interface", 0, "The System program interface.\nMaximum permitted size of new allocations per transaction, …\nMaximum permitted size of account data (10 MiB).\nInstructions and constructors for the system program.\nAn account with the same address already exists.\nProvided address does not match addressed derived from …\nCannot allocate account data of this length.\nCannot assign account to this program id.\nLength of requested seed is too long.\nStored nonce is still in recent_blockhashes.\nAdvancing stored nonce requires a populated …\nSpecified nonce does not match stored nonce.\nAccount does not have enough SOL to perform the operation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsumes a stored nonce, replacing it with a successor\nAllocate space in a (possibly new) account without funding\nAllocate space for and assign an account at an address …\nAssign account to a program\nAssign account to a program based on a seed\nChange the entity authorized to execute nonce instructions …\nCreate a new account\nCreate a new account at an address derived from a base …\nDrive state of Uninitialized nonce account to Initialized, …\nAn instruction to the system program.\nTransfer lamports\nTransfer lamports from a derived address\nOne-time idempotent upgrade of legacy nonce versions in …\nWithdraw funds from a nonce account\nAdvance the value of a durable transaction nonce.\nAllocate space for an account.\nAssign ownership of an account from the system program.\nChange the authority of a durable transaction nonce …\nCreate an account.\nCreate an account containing a durable transaction nonce.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTransfer lamports from an account owned by the system …\nTransfer lamports from an account owned by the system …\nOne-time idempotent upgrade of legacy nonce versions in …\nWithdraw lamports from a durable transaction nonce account.\nBase public key\nBase public key\nBase public key\nOwner to use to derive the funding account address\nSeed to use to derive the funding account address\nNumber of lamports to transfer to the new account\nNumber of lamports to transfer to the new account\nAmount to transfer\nAddress of program that will own the new account\nOwner program account\nOwner program account address\nOwner program account\nOwner program account\nString of ASCII chars, no longer than <code>Pubkey::MAX_SEED_LEN</code>\nString of ASCII chars, no longer than <code>pubkey::MAX_SEED_LEN</code>\nString of ASCII chars, no longer than <code>pubkey::MAX_SEED_LEN</code>\nNumber of bytes of memory to allocate\nNumber of bytes of memory to allocate\nNumber of bytes of memory to allocate\nNumber of bytes of memory to allocate\nThe const program ID.\nReturns <code>true</code> if given pubkey is the program ID.\nReturns the program ID.")